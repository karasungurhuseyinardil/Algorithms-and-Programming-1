//COME107-Lab-Week9
 
/*Example1-v1
Write a C++ program that calculate third power of the number entered by user in a function. You should call this function in main function.

NOTE: Write the function with no parameter and no return type.
*/


#include<iostream>
#include<cmath>
using namespace std;

void cube()
{
     double number, result;

     cout << "Example1-v1" << endl;
     cout << "Enter a number : ";
     cin >> number;

     result = pow(number,3);
     
	 cout << "Cube of " << number << " is " << result << endl;
}

int main()
{
     cube();

     system("pause");
     return 0;
}






/*Example1-v2
Write a C++ program that calculate third power of the number entered by user in a function. You should call this function in main function.

NOTE: Write the function with parameter and no return type. */

#include<iostream>
#include<cmath>
using namespace std;

void cube(double number)
{
	double result;

	cout << "Example1-v2" << endl;

	result = pow(number, 3);

	cout << "Cube of " << number << " is " << result << endl;
}

int main()
{
	double value;

	cout << "Enter a number : ";
	cin >> value;

	cube(value);

	system("pause");
	return 0;
}






/*Example1-v3
Write a C++ program that calculate third power of the number entered by user in a function. You should call this function in main function.

NOTE: Write the function with return type and no parameter.
*/
#include<iostream>
#include<cmath>
using namespace std;

double cube()
{
	double number, result;

	cout << "Example1-v3" << endl;
	cout << "Enter a number : ";
	cin >> number;
	
	result = pow(number, 3);

	return result;
}

int main()
{

	cout << "Cube result is " << cube() << endl;

    double finalresult;	

	finalresult=cube();

    cout << "Cube result is " << finalresult << endl;
	
	system("pause");
	return 0;
}

/*Example1-v4
Write a C++ program that calculate third power of the number entered by user in a function. You should call this function in main function.

NOTE: Write the function with return type and parameter.*/
#include<iostream>
#include<cmath>
using namespace std;

double cube(double number)
{
	double result;

	cout << "Example1-v4" << endl;
	
	result = pow(number, 3);

	return result;
}
int main()
{
	double value;

	cout << "Enter a number :" ;
	cin >> value;

	cout << "Cube result is " << cube(value) << endl;

 	double finalresult;
	finalresult = cube(value);	
	cout << "Cube final result is " << finalresult << endl;
	system("pause");
	return 0;
}




/*Example2
Write a C++ program that takes a number from user and calculate and show the following expression result.

y = ((x ^ 3 + 5)) ^(1.0/2) / ((x ^ 4 + 7))
y=√((x^3+5) )/((x^4+7) )

*/

#include<iostream>
#include<cmath>
using namespace std;

double calculate(double x);

int main()
{
	double x;

	cout << "Example 2" << endl;
	cout << "Enter a number : ";
	cin >> x;
	cout << "Result = " << calculate(x) << endl;

	system("pause");
	return 0;
}

double calculate(double x)
{
	double result;

	result = sqrt(pow(x, 3) + 5) / (pow(x, 4) + 7);

	return result;
}


/*Example3
Write a C++ program that takes a number from user and calculate and show the following expression result by defining a function.

y = ((x ^ 8 + 3)) ^(1.0/7) / ((9x ^ 2 + 1))

y=√(7&(x^8+3) )/((9x^2+1) )

*/

#include<iostream>
#include<cmath>
using namespace std;

 double calculate(double x);

int main()
{
	double x;

	cout << "Example 3 " << endl;
	cout << "Enter a number : ";
	cin >> x;


	cout << "Result = " << calculate(x) << endl;

	system("pause");
	return 0;
}

double calculate(double x)
{
	double resultin, resultup,resultdown, result;

	resultin = pow(x, 8) + 3;
	resultup = pow(resultin, (1.0 / 7));
	resultdown = 9 * pow(x, 2) + 1;
	result = resultup / resultdown;

	return result;
}


/*Example4-v1
Write a C++ program that calculates and displays the summation result between two integer numbers entered by user except 7 and 9 by a defined function. The summation result should not have the value bigger than 345000.
NOTE : You need to find summation result of numbers between two integer numbers entered by user except 7 and 9. The summation result should not have the value bigger than 345000.
*/

#include<iostream>
using namespace std;

int result(int min, int max);

int main()
{
	int number1, number2, max, min;
	
	cout << "Example4-v1" << endl;
	cout << "Enter two integer number : ";
	cin >> number1>>number2;

	if (number1 > number2)
	{
		max = number1;
		min = number2;
	}
	else
	{
		max = number2;
		min = number1;
	}
	
	cout << "Summation result of numbers = " << result(min,max) << endl;

	system("pause");
	return 0;
}

   int result(int min, int max)
{
	int sum=0;

	int i = min;
	while (i <= max)
	{
		if (i == 7 || i == 9)
		{
			i = i + 1;
			continue; 
		}
        sum = sum + i;
	   i = i + 1;
		if (sum > 345000)
		{
			break;
		}
	}


	/*for (int i = min; i <= max;i ++)
	{
		if (i == 7 || i == 9)
    	{
			continue;
		}
		sum = sum + i;
		if (sum > 345000)
		{
		  break;
		}
	}
*/
	return sum;
}


/*Example4-v2
Write a C++ program that calculates and displays the summation result between two integer numbers entered by user except 7 and 9 by defined functions. The summation result should not have the value bigger than 345000.
NOTE : You need to find summation result of numbers between two integer numbers entered by user except 7 and 9. The summation result should not have the value bigger than 345000.  */

#include<iostream>
using namespace std;

int result(int min, int max);
int findMax(int number1, int number2);
int findMin(int number1, int number2);

int main()
{
	int number1, number2, max, min;
	 

	cout << "Example4-v2" << endl;
	cout << "Enter two integer number:";
	cin >> number1>>number2;

	max=findMax(number1, number2);
	min=findMin(number1, number2);

	
	cout << "Summation result of numbers= " << result(min, max) << endl;

	system("pause");
	return 0;
}

int findMax(int number1, int number2)
{
	int max;
	if (number1 > number2)
	{
		max = number1;
	}
	else
	{
		max = number2;
	}
	return max;
}
int findMin(int number1, int number2)
{
	int min;
	if (number1 > number2)
	{
		min = number2;
	}
	else
	{
		min = number1;
	}
	return min;
}

int findMin(int number1, int number2);

int result(int min, int max)
{
	int sum=0;

	int i = min;
	while (i <= max)
	{
		if (i == 7 || i == 9)
		{
			i = i + 1;
			continue; 
		}
        sum = sum + i;
		i = i + 1;
		if (sum > 345000)
		{
			break;
		}
	}

	/*for (int i = min; i <= max;i ++)
	{
		if (i == 7 || i == 9)
		{
			continue;
		}
		sum = sum + i;
		if (sum > 345000)
		{
		  break;
		}
	}*/

	return sum;
}

/*Example5
Write a C++ program that calculates factorial result of the integer number entered by user by using a defined function.
*/

#include<iostream>
using namespace std;
 int factorial(int number);
int main()
{
	int number;

	cout << "Example5"<<endl;
	cout << "Enter an integer number:";
	cin >> number;


	cout << number << "!= " << factorial(number) << endl;

	system("pause");
	return 0;
}
int factorial(int number)
{
 	int result=1;

	for (int i = 1; i <= number; i++)
	{
		result = result*i;
	}
	
	/*
	int i = 1;
	while ( i <= number)
	{
		result = result*i;
		i++;//i=i+1;
	}
	*/

	return result;
}

/*Example6
Write a C++ program that print following triangle using * by using a defined function

        *
      * * *
    * * * * *  
  * * * * * * *
* * * * * * * * *


*/
#include <iostream>
using namespace std;

void drawTriangle(int rows);

int main()
{
int rows;

cout <<"Enter number of rows : ";
cin >> rows;
drawTriangle(rows);
system("pause");
return 0;
}

void drawTriangle(int rows)
{
int space;
for(int i = 1, k = 0; i <= rows; ++i, k = 0)
 {
   for(space = 1; space <= rows-i; ++space)
      {
        cout <<"  ";
      }
   while(k != 2*i-1)
      {
         cout << "* ";
         ++k;
      }
    cout << endl;
 }

}
